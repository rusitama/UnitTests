User
Задание 1. Ответьте письменно на вопросы:

1) Почему использование тестовых заглушек может быть полезным при написании модульных тестов?

Использование тестовых заглушек при написании модульных тестов полезно по нескольким причинам. Во-первых, заглушки
позволяют изолировать тестируемый модуль от зависимостей, таких как внешние сервисы или базы данных, что делает
тестирование более предсказуемым и контролируемым. Во-вторых, они позволяют сфокусироваться на конкретной
функциональности модуля, обеспечивая тестирование отдельных компонентов независимо от других частей системы.


2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными аргументами?

Для проверки вызова метода с определенными аргументами следует использовать заглушку, называемую "шпион" (spy).
Шпионы записывают информацию о вызовах метода, такую как переданные аргументы, и затем эти данные могут быть
использованы в тестах для проверки корректности вызовов.


3) Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода?

Если требуется просто вернуть определенное значение или сгенерировать исключение в ответ на вызов метода, то следует
использовать заглушку, называемую "подделка" (stub). Подделки предоставляют фиксированный результат при вызове метода
и могут быть использованы для изоляции тестируемого кода от внешних зависимостей.

4) Какой тип тестовой заглушки вы бы использовали для имитации  взаимодействия с внешним API или базой данных?

Для имитации взаимодействия с внешним API или базой данных обычно используют заглушку, называемую "мок" (mock).
Моки создаются с целью эмуляции поведения внешних систем и позволяют тестировать код, который взаимодействует с
внешними ресурсами, без реального подключения к ним. Моки могут имитировать ответы API, эмулировать базу данных и т.д.




